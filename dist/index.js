import './sourcemap-register.cjs';import{createRequire as __WEBPACK_EXTERNAL_createRequire}from"module";var __webpack_modules__={438:module=>{module.exports=eval("require")("@actions/core")},839:module=>{module.exports=eval("require")("axios")},815:module=>{module.exports=eval("require")("axios-retry")},89:module=>{module.exports=eval("require")("form-data")},403:module=>{module.exports=eval("require")("markdown-it")},635:module=>{module.exports=eval("require")("plantuml-encoder")},475:module=>{module.exports=eval("require")("yaml")},561:e=>{e.exports=__WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:fs")},57:(e,t,r)=>{r.d(t,{Z:()=>f});var a=r(561);const n=__WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:url");var s=r(438);const i=r.ab+"package.json";const{version:o}=JSON.parse((0,a.readFileSync)(i));const c={required:true,trimWhitespace:true};const u={required:false,trimWhitespace:true};const l=(0,s.getInput)("mermaid_renderer",u);const p=(0,s.getInput)("plantuml_renderer",u);const d=(0,s.getInput)("kroki_enabled",u)?.toLowerCase()==="yes";const h=d?"kroki":"none";const m={version:o,confluence:{host:`https://${(0,s.getInput)("confluence_tenant",c)}.atlassian.net`,user:(0,s.getInput)("confluence_user",c),token:(0,s.getInput)("confluence_token",c),spaceKey:(0,s.getInput)("confluence_space",c),parentPage:(0,s.getInput)("confluence_parent_page",u),titlePrefix:(0,s.getInput)("confluence_title_prefix",u),forceUpdate:(0,s.getInput)("confluence_force_update",u).toLowerCase()==="yes",cleanup:(0,s.getInput)("confluence_cleanup",u).toLowerCase()==="yes",pageLimit:25},graphs:{mermaid:{type:"mermaid",renderer:["none","kroki","mermaid-plugin"].includes(l)?l:h,extension:".mmd"},plantuml:{type:"plantuml",renderer:["none","kroki","plantuml"].includes(p)?p:h,extension:".puml"}},kroki:{host:"https://kroki.io"},plantuml:{baseUrl:"https://www.plantuml.com/plantuml/img"},github:{sha:process.env.GITHUB_SHA,refName:process.env.GITHUB_REF_NAME}};const f=m},116:(e,t,r)=>{r.d(t,{E:()=>cleanup,Z:()=>sync});var a=r(561);const n=__WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:path");var s=r(475);const i=__WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:crypto");const o="sha256";function fileHash(e,t="utf8"){const r=(0,a.readFileSync)(e,t);return(0,i.createHash)(o).update(r,t).digest("hex")}function validateType(e,t,r){const a="aeiou".includes(r[0])?"an":"a";const n=new Error(`${e} should be ${a} ${r}`);if(r==="array"&&Array.isArray(t)){return}else if(r==="object"){if(typeof t!=="object"||t===null||Array.isArray(t)){throw n}}else if(typeof t!==r){throw n}}function keyBy(e,t){const r={};const a=t.split(".");if(Array.isArray(e)&&e.length>0){e.forEach((e=>{const t=dig(e,a);if(t){r[t]=e}}))}return r}function dig(e,[t,...r]){if(!e[t]){return}if(r.length>0){return dig(e[t],r)}return e[t]}function safePath(e,t=process.cwd()){let r=n.dirname(t);if(e.startsWith("/")){e="."+e;r=process.cwd()}const s=n.resolve(r,e);if(s.startsWith(process.cwd())&&(0,a.existsSync)(s)){return n.relative(process.cwd(),s)}}const c={validateType:validateType,fileHash:fileHash,keyBy:keyBy,safePath:safePath};var u=r(438);function debug(e){u.debug(e)}function error(e){u.error(e)}function warn(e){u.warning(e)}function info(e){u.info(e)}function isDebug(){return u.isDebug()}function notice(e){u.notice(e)}function fail(e){u.setFailed(e)}const l={debug:debug,warn:warn,info:info,notice:notice,error:error,isDebug:isDebug,fail:fail,summary:u.summary};var p=r(57);class Attachment{constructor(e){this.path=e}get filename(){return(0,n.basename)(this.path)}render(e){return this.path}}const d=Attachment;class Image extends d{constructor(e,t){super(e);this.alt=t}get markup(){return`<ac:image ac:alt="${this.alt}"><ri:attachment ri:filename="${this.filename}" /></ac:image>`}}const h=Image;class Graph extends d{constructor(e,t,r,a){super(e);this.type=t;this.renderer=r;this.alt=a||`${t} graph`}get imageFilename(){const e=(0,n.extname)(this.filename);const t=(0,n.basename)(this.filename,e);return t+".png"}get markup(){switch(this.renderer){case"kroki":case"plantuml":return`<ac:image ac:alt="${this.alt}"><ri:attachment ri:filename="${this.imageFilename}" /></ac:image>`;case"mermaid-plugin":return`<ac:structured-macro ac:name="mermaid-cloud" data-layout="default" ><ac:parameter ac:name="filename">${this.filename}</ac:parameter></ac:structured-macro>`;default:return""}}render(e){return e.renderGraph(this)}}const m=Graph;class Meta{constructor(e,t=null,r=null,a=null,n=null,s=null){this.repo=e;this.path=t;this.sha=r;this.git_ref=a||p.Z.github.refName;this.git_sha=n||p.Z.github.sha;this.publisher_version=s||p.Z.version}get githubUrl(){return`${this.repo}/blob/${this.git_ref}/${this.path}`}toConfluenceProperties(){const e={};Object.entries(this).forEach((([t,r])=>{if(r){e[t]={key:t,value:r}}}));return e}publisherVersionConflict(){if(typeof this.publisher_version!=="string"){return true}const e=this.publisher_version.split(".").slice(0,2).join();const t=p.Z.version.split(".").slice(0,2).join();return t!==e}}const f=Meta;class Page{constructor(e,t){this.title=e;this.meta=t}get path(){return this.meta?.path}}const g=Page;class LocalPage extends g{get html(){return this._html||""}set html(e){this._html=e}get attachments(){if(!this._attachments){this._attachments=[]}return this._attachments}set attachments(e){this._attachments=e}get parentPageId(){return this._parentPageId}set parentPageId(e){this._parentPageId=e}get attachmentFiles(){if(!this._attachmentFiles){this._attachmentFiles=[]}return this._attachmentFiles}set attachmentFiles(e){this._attachmentFiles=e}loadMarkdown(){if(!this.path){return}if(!this.path.endsWith(".md")){throw new Error(`${this.path} is not a markdown (.md) file`)}return(0,a.readFileSync)((0,n.resolve)(this.path),"utf8")}async render(e){await e.renderPage(this);await this.renderAttachments(e);return this}async renderAttachments(e){for(const t of this.attachments){const r=await t.render(e);if(!r){l.warn(`${t.constructor.name} "${t.path}" could not be processed`)}else{this.attachmentFiles.push(r)}}}async sync(e,t){await this.render(e);const r=await t.createPage(this);l.debug(`Created Page: [${r.id}] ${r.title}`);for(const e of this.attachmentFiles){await t.createAttachment(r.id,e);l.debug(`Attached file ${e}" to page [${r.id}] ${r.title}`)}return r}}const _=LocalPage;class RemotePage extends g{constructor(e,t,r,a,n=null){super(r,a);this.id=e;this.version=t;this.parentId=n}get localPage(){return this._local}set localPage(e){this._local=e}shouldUpdate(){if(!this.localPage){return false}if(p.Z.confluence.forceUpdate||this.meta.publisherVersionConflict()){return true}return this.localPage.meta.sha!==this.meta.sha}repoConflict(){if(!this.localPage){return false}return this.meta.repo!==this.localPage.meta.repo}async sync(e,t){const{localPage:r}=this;if(!r){l.debug(`Deleting page "${this.title}" #${this.id}`);return t.deletePage(this.id)}if(!this.shouldUpdate()){l.debug(`Skipping update of page "${this.title}" #${this.id}`);return this}r.parentPageId=this.parentId;await r.render(e);for(const e of r.attachmentFiles){await t.createAttachment(this.id,e);l.debug(`Attached file ${e}" to page "${this.title}" #${this.id}`)}const a=await t.updatePage(this);return a}}const y=RemotePage;const w="mkdocs.yml";const v="README.md";function loadConfig(e){const t=n.resolve(e,w);const r=(0,a.readFileSync)(t,"utf8");const i=s.parse(r);const{nav:o,repo_url:c,site_name:u}=i;if(!Array.isArray(o)){throw new Error(`nav is missing from your ${w} file`)}if(typeof c!=="string"||c.trim().length===0){throw new Error(`repo_url is missing from your ${w} file`)}return{nav:o,repo_url:c,site_name:u}}function traverse(e,t,r,a=[]){t.forEach((t=>{if(typeof t==="string"){throw new Error(`No title for ${t}`)}const s=Object.keys(t)[0];const i=Object.values(t)[0];if(Array.isArray(i)){traverse(e,i,r,a)}else{const t=getPage(e,s,n.resolve(r,"docs",i));if(t){a.push(t)}}}));return a}function getPage(e,t,r,s=p.Z.confluence.titlePrefix){const i=r.startsWith(process.cwd());const o=i&&(0,a.existsSync)(r);const u=n.relative(process.cwd(),r);if(!o){l.warn(`Page "${t}" not found at "${u}"`);return}const d=c.fileHash(r);const h=`${s} ${t}`.trim();return new _(h,new f(e,u,d))}function getContext(e="."){const{nav:t,repo_url:r,site_name:a}=loadConfig(e);const s=traverse(r,t,e);const i=getPage(r,a,n.resolve(e,v),"");const o=s.reduce(((e,t)=>{e[t.meta.path]=t.title;return e}),i?{[i.meta.path]:i.title}:{});const c={siteName:a,repo:r,pages:s,pageRefs:o};if(i){c.readMe=i}if(l.isDebug()){l.debug(`Context:\n${JSON.stringify(c,null,2)}`)}return c}const b={getContext:getContext};const k=__WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:querystring");var P=r(839);var $=r(89);class RequestError extends Error{constructor(e,t,r=null){super(`Request failed with: ${e} - ${r||t}`)}}var x=r(815);function retryPolicy(e){x(e,{retries:3,retryDelay:x.exponentialDelay})}const E=retryPolicy;const R="/wiki/rest/api/content";const T=["version","metadata.properties.repo","metadata.properties.path","metadata.properties.sha","metadata.properties.git_ref","metadata.properties.git_sha","metadata.properties.publisher_version"].join(",");class ConfluenceSdk{constructor({host:e,user:t,token:r,spaceKey:a,pageLimit:n}){c.validateType("host",e,"string");this.host=e;c.validateType("spaceKey",a,"string");this.spaceKey=a;c.validateType("user",t,"string");c.validateType("token",r,"string");this.authHeader="Basic "+Buffer.from(`${t}:${r}`).toString("base64");this.pageLimit=n;this.api=P.create({validateStatus:e=>e<500,baseURL:`${e}`,headers:{Authorization:this.authHeader,Accept:"application/json"}});E(this.api)}async getChildPages(e){c.validateType("parentPage",e,"number");const t=k.stringify({expand:T,start:0,limit:this.pageLimit});const r=new Map;let a=`${R}/${e}/child/page?${t}`;while(a){const t=await this.api.get(a);const n=this.validateResponse(t);if(n.size===0){break}n.results.forEach((t=>{const a=this.remotePage(t,e);r.set(a.meta.path,a)}));a=n._links?.next?n._links.context+n._links.next:null}return r}async _getCurrentUser(){if(!this.currentUser){const e=await this.api.get("/wiki/rest/api/user/current");const{type:t,accountId:r,accountType:a}=this.validateResponse(e);this.currentUser={type:t,accountId:r,accountType:a}}return this.currentUser}async findPage(e){c.validateType("title",e,"string");const t=k.stringify({title:e,type:"page",spaceKey:this.spaceKey,expand:T});const r=await this.api.get(`${R}?${t}`);const a=this.validateResponse(r);if(a.size===0){return}const n=a.results[0];return this.remotePage(n)}remotePage(e,t){return new y(Number.parseInt(e.id,10),e.version.number,e.title,this.pageMeta(e),t)}pageMeta(e){const t=e.metadata?.properties;return new f(t?.repo?.value,t?.path?.value,t?.sha?.value,t?.git_ref?.value,t?.git_sha?.value,t?.publisher_version?.value)}async createPage(e){c.validateType("title",e.title,"string");c.validateType("html",e.html,"string");const t={title:e.title,type:"page",space:{key:this.spaceKey},version:{number:1},ancestors:[],body:{storage:{value:e.html,representation:"storage"}},metadata:{properties:{editor:{key:"editor",value:"v2"}}},restrictions:{update:{operation:"update",restrictions:{user:{results:[]},group:{results:[]}}}}};await this._getCurrentUser().then((e=>{t.restrictions.update.restrictions.user.results.push(e)}));if(e.meta){if(e.meta instanceof f){Object.assign(t.metadata.properties,e.meta.toConfluenceProperties())}else{throw new Error("meta is not an instance of Meta class")}}if(e.parentPageId){c.validateType("parentPage",e.parentPageId,"number");t.ancestors.push({id:e.parentPageId})}const r=await this.api.post(R,t,{headers:{"Content-Type":"application/json"}});const{id:a}=this.validateResponse(r);const n=new y(Number.parseInt(a,10),1,e.title,e.meta,e.parentPageId);n.localPage=e;return n}async updatePage(e){const{localPage:t}=e;const r=t.title;const a=t.html;c.validateType("id",e.id,"number");c.validateType("version",e.version,"number");c.validateType("title",r,"string");c.validateType("html",a,"string");const n={title:r,type:"page",version:{number:e.version+1},ancestors:[],body:{storage:{value:a,representation:"storage"}},metadata:{properties:{editor:{key:"editor",value:"v2"}}},restrictions:{update:{operation:"update",restrictions:{user:{results:[]},group:{results:[]}}}}};await this._getCurrentUser().then((e=>{n.restrictions.update.restrictions.user.results.push(e)}));if(t.meta){if(t.meta instanceof f){Object.assign(n.metadata.properties,t.meta.toConfluenceProperties())}else{throw new Error("meta is not an instance of Meta class")}}if(t.parentPageId){c.validateType("parentPage",t.parentPageId,"number");n.ancestors.push({id:t.parentPageId})}const s=await this.api.put(`${R}/${e.id}`,n,{headers:{"Content-Type":"application/json"}});this.validateResponse(s);e.version++;e.meta=t.meta;return e}async deletePage(e){const t=await this.api.delete(`${R}/${e}`);this.validateResponse(t,[204,404])}async createAttachment(e,t){c.validateType("pageId",e,"number");c.validateType("path",t,"string");if(!a.existsSync(t)){throw new Error(`Attachment '${t}' not exists`)}const r=new $;r.append("minorEdit","true");r.append("file",a.createReadStream(t));const n=Object.assign({"X-Atlassian-Token":"nocheck"},r.getHeaders());const s=await this.api.put(`${R}/${e}/child/attachment`,r,{headers:n});this.validateResponse(s)}validateResponse({status:e,statusText:t,data:r},a=[200]){if(!a.includes(e)){l.error(JSON.stringify({status:e,statusText:t,data:r},undefined,2));throw new RequestError(e,t,r.message)}return r}}const A=ConfluenceSdk;class BaseSdk{constructor(e){this.api=P.create({validateStatus:e=>e<500,baseURL:e});E(this.api)}get supportedTypes(){throw new Error("Unimplemented")}fileCheck(e){if(!(0,a.existsSync)(e)){throw new Error(`File ${e} not found`)}}request(e,t){throw new Error("Unimplemented")}async toPng({path:e,type:t}){if(!this.supportedTypes.includes(t)){throw new Error(`Graph type ${t} is not one of supported ["${this.supportedTypes.join('", "')}"]`)}this.fileCheck(e);const r=await this.request(e,t);if(r.status===200){const t=n.extname(e);const s=e.slice(0,-1*t.length)+".png";return new Promise(((e,t)=>{const n=(0,a.createWriteStream)(s).on("close",(()=>e(s))).on("error",(e=>t(e)));r.data.pipe(n)}))}}}const C=BaseSdk;class KrokiSdk extends C{constructor(e){super(e);this.api.defaults.headers.post["Content-Type"]="text/plain"}get supportedTypes(){return["mermaid","plantuml"]}request(e,t){const r=(0,a.createReadStream)(e,"utf8");return this.api.post(`/${t}/png`,r,{responseType:"stream"})}}const S=KrokiSdk;var q=r(635);class PlantUmlSdk extends C{get supportedTypes(){return["plantuml"]}request(e){const t=q.encode((0,a.readFileSync)(e,"utf8"));return this.api.get(`/${t}`,{responseType:"stream"})}}const I=PlantUmlSdk;const L="kroki";const U="plantuml";const j="mermaid-plugin";class GraphRenderer{constructor({kroki:e,plantuml:t}){this.kroki=new S(e.host);this.plantUml=new I(t.baseUrl)}async render(e){let t;switch(e.renderer){case L:t=await this.kroki.toPng(e);break;case U:t=await this.plantUml.toPng(e);break;case j:t=e.path;break}return t}}const H=GraphRenderer;var O=r(403);function fence_plugin(e,t){const r=t.graphs;const a=Object.keys(r);e.renderer.rules.fence=(e,t,n,s)=>{const i=e[t];const o=i?.info?.trim();const c=i?.content?.trim();if(a.includes(o)){return processGraph(r[o],c,s)}return codeMacro(o,c)}}function codeMacro(e,t){if(t.length===0){return""}const r=`<![CDATA[${fence_escape(t)}]]>`;let a="";if(e.length>0){a=`<ac:parameter ac:name="language">${e.trim()}</ac:parameter>`}return`<ac:structured-macro ac:name="code">${a}<ac:plain-text-body>${r}</ac:plain-text-body></ac:structured-macro>\n`}function fence_escape(e){return e.replace(/]]>/g,"]]]]><![CDATA[>")}function processGraph(e,t,{page:r}){if(e.renderer==="none"){return codeMacro(e.type,t)}const s=r?.meta?.path;const i=`graph_${r.attachments.length+1}`;const o=n.basename(s,".md")+"_"+i+e.extension;const c=n.resolve(n.dirname(s),o);(0,a.writeFileSync)(c,t,"utf8");const u=n.relative(process.cwd(),c);const l=new m(u,e.type,e.renderer,i);r.attachments.push(l);return l.markup}const F=fence_plugin;function image_plugin(e){const t=e.renderer.rules.image;e.renderer.rules.image=(r,a,n,s,i)=>{const o=r[a];const u=Object.fromEntries(o.attrs);const l=e.utils.escapeHtml(u.src);const{page:p}=s;if(isLocal(l)){const t=c.safePath(l,p?.path);if(t){const r=e.utils.escapeHtml(o.content);const a=new h(t,r);p?.attachments.push(a);return a.markup}}return t(r,a,n,s,i)}}function isLocal(e){return!e.startsWith("http")}const N=image_plugin;function link_plugin(e){e.renderer.rules.link_open=(t,r,a,n,s)=>{const i=localPage(t,r,n,e);if(i){return confluenceLinkOpen(i)}return s.renderToken(t,r,a)};e.renderer.rules.link_close=(t,r,a,n,s)=>{let i=r-1;while(t[i].type!=="link_open"&&i>-1){i--}if(t[i].type==="link_open"&&localPage(t,i,n,e)){return confluenceLinkClose()}return s.renderToken(t,r,a)}}function localPage(e,t,{page:r,pageRefs:a},n){const s=e[t];const i=Object.fromEntries(s.attrs);const o=n.utils.escapeHtml(i.href);if(link_isLocal(o)){const e=c.safePath(o,r?.path);if(e&&a&&a[e]){return a[e]}}}function link_isLocal(e){return!e.toLowerCase().startsWith("http")}function confluenceLinkOpen(e){return`<ac:link ac:card-appearance="inline"><ri:page ri:content-title="${e}" /><ac:link-body>`}function confluenceLinkClose(){return"</ac:link-body></ac:link>"}const B=link_plugin;const K={xhtmlOut:true,html:true};class PageRenderer{constructor({graphs:e},t){this.pageRefs=t;this.parser=new O(K).use(F,{graphs:e}).use(N).use(B)}render(e){const t=e.loadMarkdown();if(t){e.html=this.parser.render(t,{page:e,pageRefs:this.pageRefs})+this.footer(e)}return e}footer(e){return`<hr /><p style="text-align: right;"><a href="${e.meta.githubUrl}">Edit on GitHub</a> ✍️</p>\n`}}const M=PageRenderer;class AssetRenderer{constructor(e,t){this.pageRenderer=new M(e,t);this.graphRenderer=new H(e)}renderPage(e){return this.pageRenderer.render(e)}renderGraph(e){return this.graphRenderer.render(e)}}const Z=AssetRenderer;const D=new A(p.Z.confluence);async function sync(){try{const{siteName:e,repo:t,pages:r,readMe:a,pageRefs:n}=b.getContext();const s=new Z(p.Z,n);const i=await syncHome(t,e,a,s);await syncPages(i,r,s);const o=`${p.Z.confluence.host}/wiki/spaces/${p.Z.confluence.spaceKey}/pages/${i}`;l.info(`"${e}" Documentation published at ${o} by fork`);syncSummary(e,o)}catch(e){errorHandler(e)}}function syncSummary(e,t){l.summary.addHeading(":books: Documentation published",1).addRaw("View the documentation using the following link").addBreak().addRaw(":link: ").addLink(e,t).addEOL().write()}function errorHandler(e){if(l.isDebug()){const t=Object.assign({},p.Z);t.confluence.token="***";l.debug(`Config:\n${JSON.stringify(t,null,2)}`);l.debug(e.stack)}l.fail(e)}async function syncHome(e,t,r,a){if(!r){r=new _(t,new f(e));r.html=`<h1>${t}</h1>`}r.parentPageId=await findParentPage();let n=r;const s=await D.findPage(t);if(s){n=s;n.localPage=r;if(n.repoConflict()){throw new Error(`Page "${t}" already exist for another repo "${n.meta.repo}"`)}}return n.sync(a,D).then((e=>e.id))}async function findParentPage(){const e=p.Z.confluence.parentPage;if(!e){return}const t=await D.findPage(e);if(!t){throw new Error(`The page configured as parent (${e}) does not exist in confluence`)}return t.id}async function syncPages(e,t,r){const a=await union(e,t);for(let e of a){await e.sync(r,D)}}async function unpublish(e){for(let t of e){await D.deletePage(t.id).then((()=>{l.debug(`Deleted Page: [${t.id}] ${t.title}`)}))}}async function union(e,t){const r=await D.getChildPages(e);const a=[];for(let n of t){n.parentPageId=e;const t=r.get(n.meta.path);if(!t){a.push(n);continue}r.delete(n.meta.path);t.localPage=n;a.push(t)}for(let e of r.values()){a.push(e)}return a}async function cleanup(){const{siteName:e}=await b.getContext();try{const t=await D.findPage(e);if(!t){l.warn(`No page with title "${e}" found in confluence, nothing to clean here`);return}const r=await D.getChildPages(t.id);await unpublish(r.values());await unpublish([t]);cleanupSummary(e)}catch(e){errorHandler(e)}}function cleanupSummary(e){l.summary.addHeading(":broom: Cleanup",1).addRaw(`All confluence pages of "${e}" have been deleted`).addEOL().write()}},37:(e,t,r)=>{r.a(e,(async(e,t)=>{try{var a=r(57);var n=r(116);const e=a.Z.confluence.cleanup?n.E:n.Z;await e();t()}catch(e){t(e)}}),1)}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var r=__webpack_module_cache__[e]={exports:{}};var a=true;try{__webpack_modules__[e](r,r.exports,__nccwpck_require__);a=false}finally{if(a)delete __webpack_module_cache__[e]}return r.exports}(()=>{var e=typeof Symbol==="function"?Symbol("webpack queues"):"__webpack_queues__";var t=typeof Symbol==="function"?Symbol("webpack exports"):"__webpack_exports__";var r=typeof Symbol==="function"?Symbol("webpack error"):"__webpack_error__";var resolveQueue=e=>{if(e&&!e.d){e.d=1;e.forEach((e=>e.r--));e.forEach((e=>e.r--?e.r++:e()))}};var wrapDeps=a=>a.map((a=>{if(a!==null&&typeof a==="object"){if(a[e])return a;if(a.then){var n=[];n.d=0;a.then((e=>{s[t]=e;resolveQueue(n)}),(e=>{s[r]=e;resolveQueue(n)}));var s={};s[e]=e=>e(n);return s}}var i={};i[e]=e=>{};i[t]=a;return i}));__nccwpck_require__.a=(a,n,s)=>{var i;s&&((i=[]).d=1);var o=new Set;var c=a.exports;var u;var l;var p;var d=new Promise(((e,t)=>{p=t;l=e}));d[t]=c;d[e]=e=>(i&&e(i),o.forEach(e),d["catch"]((e=>{})));a.exports=d;n((a=>{u=wrapDeps(a);var n;var getResult=()=>u.map((e=>{if(e[r])throw e[r];return e[t]}));var s=new Promise((t=>{n=()=>t(getResult);n.r=0;var fnQueue=e=>e!==i&&!o.has(e)&&(o.add(e),e&&!e.d&&(n.r++,e.push(n)));u.map((t=>t[e](fnQueue)))}));return n.r?s:getResult()}),(e=>(e?p(d[r]=e):l(c),resolveQueue(i))));i&&(i.d=0)}})();(()=>{__nccwpck_require__.d=(e,t)=>{for(var r in t){if(__nccwpck_require__.o(t,r)&&!__nccwpck_require__.o(e,r)){Object.defineProperty(e,r,{enumerable:true,get:t[r]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=new URL(".",import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/)?1:0,-1)+"/";var __webpack_exports__=__nccwpck_require__(37);__webpack_exports__=await __webpack_exports__;
//# sourceMappingURL=index.js.map